var clusters_1 = require('./clusters');
var storage_profile_1 = require('./storage-profile');
var storage_1 = require('./storage');
var blockdevice_1 = require('./blockdevice');
var osd_1 = require('./osd');
var pool_1 = require('./pool');
var request_1 = require('./request');
var server_1 = require('./server');
var user_1 = require('./user');
var util_1 = require('./util');
var volume_1 = require('./volume');
var events_1 = require('./events');
var ldap_1 = require('./ldap');
var email_1 = require("./email");
var config_1 = require("./config");
var system_1 = require("./system");
var angular = require('angular');
var moduleName = 'kitoon.rest';
angular.module(moduleName, ['angular-growl'])
    .service('ClusterService', clusters_1.ClusterService)
    .service('StorageProfileService', storage_profile_1.StorageProfileService)
    .service('StorageService', storage_1.StorageService)
    .service('BlockDeviceService', blockdevice_1.BlockDeviceService)
    .service('OSDService', osd_1.OSDService)
    .service('PoolService', pool_1.PoolService)
    .service('RequestService', request_1.RequestService)
    .service('ServerService', server_1.ServerService)
    .service('UserService', user_1.UserService)
    .service('UtilService', util_1.UtilService)
    .service('VolumeService', volume_1.VolumeService)
    .service('EventService', events_1.EventService)
    .service('LdapService', ldap_1.LdapService)
    .service('EmailService', email_1.EmailService)
    .service('ConfigService', config_1.ConfigService)
    .service('SystemService', system_1.SystemService);
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = moduleName;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZXMvcmVzdC9yZXN0LW1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSx5QkFBNkIsWUFBWSxDQUFDLENBQUE7QUFDMUMsZ0NBQW9DLG1CQUFtQixDQUFDLENBQUE7QUFDeEQsd0JBQTZCLFdBQVcsQ0FBQyxDQUFBO0FBQ3pDLDRCQUFpQyxlQUFlLENBQUMsQ0FBQTtBQUNqRCxvQkFBeUIsT0FBTyxDQUFDLENBQUE7QUFDakMscUJBQTBCLFFBQVEsQ0FBQyxDQUFBO0FBQ25DLHdCQUE2QixXQUFXLENBQUMsQ0FBQTtBQUN6Qyx1QkFBNEIsVUFBVSxDQUFDLENBQUE7QUFDdkMscUJBQTBCLFFBQVEsQ0FBQyxDQUFBO0FBQ25DLHFCQUEwQixRQUFRLENBQUMsQ0FBQTtBQUNuQyx1QkFBNEIsVUFBVSxDQUFDLENBQUE7QUFDdkMsdUJBQTJCLFVBQVUsQ0FBQyxDQUFBO0FBQ3RDLHFCQUEwQixRQUFRLENBQUMsQ0FBQTtBQUNuQyxzQkFBMkIsU0FBUyxDQUFDLENBQUE7QUFDckMsdUJBQTRCLFVBQVUsQ0FBQyxDQUFBO0FBQ3ZDLHVCQUE0QixVQUFVLENBQUMsQ0FBQTtBQUV2QyxJQUFJLE9BQU8sR0FBc0IsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBRXBELElBQUksVUFBVSxHQUFHLGFBQWEsQ0FBQztBQUUvQixPQUFPLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBRSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0tBQ3hDLE9BQU8sQ0FBQyxnQkFBZ0IsRUFBRSx5QkFBYyxDQUFDO0tBQ3pDLE9BQU8sQ0FBQyx1QkFBdUIsRUFBRSx1Q0FBcUIsQ0FBQztLQUN2RCxPQUFPLENBQUMsZ0JBQWdCLEVBQUUsd0JBQWMsQ0FBQztLQUN6QyxPQUFPLENBQUMsb0JBQW9CLEVBQUUsZ0NBQWtCLENBQUM7S0FDakQsT0FBTyxDQUFDLFlBQVksRUFBRSxnQkFBVSxDQUFDO0tBQ2pDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsa0JBQVcsQ0FBQztLQUNuQyxPQUFPLENBQUMsZ0JBQWdCLEVBQUUsd0JBQWMsQ0FBQztLQUN6QyxPQUFPLENBQUMsZUFBZSxFQUFFLHNCQUFhLENBQUM7S0FDdkMsT0FBTyxDQUFDLGFBQWEsRUFBRSxrQkFBVyxDQUFDO0tBQ25DLE9BQU8sQ0FBQyxhQUFhLEVBQUUsa0JBQVcsQ0FBQztLQUNuQyxPQUFPLENBQUMsZUFBZSxFQUFFLHNCQUFhLENBQUM7S0FDdkMsT0FBTyxDQUFDLGNBQWMsRUFBRSxxQkFBWSxDQUFDO0tBQ3JDLE9BQU8sQ0FBQyxhQUFhLEVBQUMsa0JBQVcsQ0FBQztLQUNsQyxPQUFPLENBQUMsY0FBYyxFQUFFLG9CQUFZLENBQUM7S0FDckMsT0FBTyxDQUFDLGVBQWUsRUFBRSxzQkFBYSxDQUFDO0tBQ3ZDLE9BQU8sQ0FBQyxlQUFlLEVBQUMsc0JBQWEsQ0FBQyxDQUFDO0FBRTVDO2tCQUFlLFVBQVUsQ0FBQyIsImZpbGUiOiJtb2R1bGVzL3Jlc3QvcmVzdC1tb2R1bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8cmVmZXJlbmNlIHBhdGg9XCIuLi90eXBpbmdzL3RzZC5kLnRzXCIgLz5cbmRlY2xhcmUgZnVuY3Rpb24gcmVxdWlyZShuYW1lOiBzdHJpbmcpO1xuXG5pbXBvcnQge0NsdXN0ZXJTZXJ2aWNlfSBmcm9tICcuL2NsdXN0ZXJzJztcbmltcG9ydCB7U3RvcmFnZVByb2ZpbGVTZXJ2aWNlfSBmcm9tICcuL3N0b3JhZ2UtcHJvZmlsZSc7XG5pbXBvcnQge1N0b3JhZ2VTZXJ2aWNlfSBmcm9tICcuL3N0b3JhZ2UnO1xuaW1wb3J0IHtCbG9ja0RldmljZVNlcnZpY2V9IGZyb20gJy4vYmxvY2tkZXZpY2UnO1xuaW1wb3J0IHtPU0RTZXJ2aWNlfSBmcm9tICcuL29zZCc7XG5pbXBvcnQge1Bvb2xTZXJ2aWNlfSBmcm9tICcuL3Bvb2wnO1xuaW1wb3J0IHtSZXF1ZXN0U2VydmljZX0gZnJvbSAnLi9yZXF1ZXN0JztcbmltcG9ydCB7U2VydmVyU2VydmljZX0gZnJvbSAnLi9zZXJ2ZXInO1xuaW1wb3J0IHtVc2VyU2VydmljZX0gZnJvbSAnLi91c2VyJztcbmltcG9ydCB7VXRpbFNlcnZpY2V9IGZyb20gJy4vdXRpbCc7XG5pbXBvcnQge1ZvbHVtZVNlcnZpY2V9IGZyb20gJy4vdm9sdW1lJztcbmltcG9ydCB7RXZlbnRTZXJ2aWNlfSBmcm9tICcuL2V2ZW50cyc7XG5pbXBvcnQge0xkYXBTZXJ2aWNlfSBmcm9tICcuL2xkYXAnO1xuaW1wb3J0IHtFbWFpbFNlcnZpY2V9IGZyb20gXCIuL2VtYWlsXCI7XG5pbXBvcnQge0NvbmZpZ1NlcnZpY2V9IGZyb20gXCIuL2NvbmZpZ1wiO1xuaW1wb3J0IHtTeXN0ZW1TZXJ2aWNlfSBmcm9tIFwiLi9zeXN0ZW1cIjtcblxudmFyIGFuZ3VsYXI6IG5nLklBbmd1bGFyU3RhdGljID0gcmVxdWlyZSgnYW5ndWxhcicpO1xuXG52YXIgbW9kdWxlTmFtZSA9ICdraXRvb24ucmVzdCc7XG5cbmFuZ3VsYXIubW9kdWxlKG1vZHVsZU5hbWUsIFsnYW5ndWxhci1ncm93bCddKVxuICAgIC5zZXJ2aWNlKCdDbHVzdGVyU2VydmljZScsIENsdXN0ZXJTZXJ2aWNlKVxuICAgIC5zZXJ2aWNlKCdTdG9yYWdlUHJvZmlsZVNlcnZpY2UnLCBTdG9yYWdlUHJvZmlsZVNlcnZpY2UpXG4gICAgLnNlcnZpY2UoJ1N0b3JhZ2VTZXJ2aWNlJywgU3RvcmFnZVNlcnZpY2UpXG4gICAgLnNlcnZpY2UoJ0Jsb2NrRGV2aWNlU2VydmljZScsIEJsb2NrRGV2aWNlU2VydmljZSlcbiAgICAuc2VydmljZSgnT1NEU2VydmljZScsIE9TRFNlcnZpY2UpXG4gICAgLnNlcnZpY2UoJ1Bvb2xTZXJ2aWNlJywgUG9vbFNlcnZpY2UpXG4gICAgLnNlcnZpY2UoJ1JlcXVlc3RTZXJ2aWNlJywgUmVxdWVzdFNlcnZpY2UpXG4gICAgLnNlcnZpY2UoJ1NlcnZlclNlcnZpY2UnLCBTZXJ2ZXJTZXJ2aWNlKVxuICAgIC5zZXJ2aWNlKCdVc2VyU2VydmljZScsIFVzZXJTZXJ2aWNlKVxuICAgIC5zZXJ2aWNlKCdVdGlsU2VydmljZScsIFV0aWxTZXJ2aWNlKVxuICAgIC5zZXJ2aWNlKCdWb2x1bWVTZXJ2aWNlJywgVm9sdW1lU2VydmljZSlcbiAgICAuc2VydmljZSgnRXZlbnRTZXJ2aWNlJywgRXZlbnRTZXJ2aWNlKVxuICAgIC5zZXJ2aWNlKCdMZGFwU2VydmljZScsTGRhcFNlcnZpY2UpXG4gICAgLnNlcnZpY2UoJ0VtYWlsU2VydmljZScsIEVtYWlsU2VydmljZSlcbiAgICAuc2VydmljZSgnQ29uZmlnU2VydmljZScsIENvbmZpZ1NlcnZpY2UpXG4gICAgLnNlcnZpY2UoJ1N5c3RlbVNlcnZpY2UnLFN5c3RlbVNlcnZpY2UpO1xuXG5leHBvcnQgZGVmYXVsdCBtb2R1bGVOYW1lO1xuIl19
